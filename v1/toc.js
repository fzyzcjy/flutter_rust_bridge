// Populate the sidebar
//
// This is a script, and not included directly in the page, to control the total size of the book.
// The TOC contains an entry for each page, so if each page includes a copy of the TOC,
// the total size of the page becomes O(n**2).
class MDBookSidebarScrollbox extends HTMLElement {
    constructor() {
        super();
    }
    connectedCallback() {
        this.innerHTML = '<ol class="chapter"><li class="chapter-item expanded affix "><a href="index.html">Introduction</a></li><li class="chapter-item expanded affix "><li class="part-title">Part I: Core</li><li class="chapter-item expanded "><a href="quickstart.html"><strong aria-hidden="true">1.</strong> ðŸ§­ Quickstart</a></li><li class="chapter-item expanded "><a href="tutorial_with_flutter.html"><strong aria-hidden="true">2.</strong> ðŸ“š Tutorial: A Flutter+Rust app</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="tutorial/setup_android.html"><strong aria-hidden="true">2.1.</strong> Android setup</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="tutorial/alternative_ndk.html"><strong aria-hidden="true">2.1.1.</strong> Alternative NDK setup</a></li></ol></li></ol></li><li class="chapter-item expanded "><a href="feature.html"><strong aria-hidden="true">3.</strong> ðŸŽ¼ Features</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="feature/lang.html"><strong aria-hidden="true">3.1.</strong> Language translations</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="feature/lang_simple.html"><strong aria-hidden="true">3.1.1.</strong> Simple correspondence</a></li><li class="chapter-item expanded "><a href="feature/lang_vec.html"><strong aria-hidden="true">3.1.2.</strong> Vec and array</a></li><li class="chapter-item expanded "><a href="feature/lang_struct.html"><strong aria-hidden="true">3.1.3.</strong> Struct</a></li><li class="chapter-item expanded "><a href="feature/lang_enum.html"><strong aria-hidden="true">3.1.4.</strong> Enum</a></li><li class="chapter-item expanded "><a href="feature/lang_tuple.html"><strong aria-hidden="true">3.1.5.</strong> Tuples</a></li><li class="chapter-item expanded "><a href="feature/lang_external.html"><strong aria-hidden="true">3.1.6.</strong> External types</a></li><li class="chapter-item expanded "><a href="feature/lang_option.html"><strong aria-hidden="true">3.1.7.</strong> Option</a></li><li class="chapter-item expanded "><a href="feature/lang_methods.html"><strong aria-hidden="true">3.1.8.</strong> Methods</a></li><li class="chapter-item expanded "><a href="feature/lang_return_types.html"><strong aria-hidden="true">3.1.9.</strong> Return types</a></li><li class="chapter-item expanded "><a href="feature/lang_dynamic.html"><strong aria-hidden="true">3.1.10.</strong> Dynamic</a></li><li class="chapter-item expanded "><a href="feature/lang_rust_opaque.html"><strong aria-hidden="true">3.1.11.</strong> Arbitrary Rust types (opaque)</a></li><li class="chapter-item expanded "><a href="feature/lang_dart_opaque.html"><strong aria-hidden="true">3.1.12.</strong> Arbitrary Dart types (opaque)</a></li><li class="chapter-item expanded "><a href="feature/lang_type_alias.html"><strong aria-hidden="true">3.1.13.</strong> Type alias</a></li><li class="chapter-item expanded "><a href="feature/lang_exceptions.html"><strong aria-hidden="true">3.1.14.</strong> Result / Exceptions</a></li><li class="chapter-item expanded "><a href="feature/lang_default.html"><strong aria-hidden="true">3.1.15.</strong> Parameter defaults</a></li></ol></li><li class="chapter-item expanded "><a href="feature/zero_copy.html"><strong aria-hidden="true">3.2.</strong> Zero copy</a></li><li class="chapter-item expanded "><a href="feature/stream.html"><strong aria-hidden="true">3.3.</strong> Stream / Iterator</a></li><li class="chapter-item expanded "><a href="feature/async_dart.html"><strong aria-hidden="true">3.4.</strong> Async in Dart</a></li><li class="chapter-item expanded "><a href="feature/sync_dart.html"><strong aria-hidden="true">3.5.</strong> Sync in Dart</a></li><li class="chapter-item expanded "><a href="feature/concurrency.html"><strong aria-hidden="true">3.6.</strong> Concurrency</a></li><li class="chapter-item expanded "><a href="feature/handler.html"><strong aria-hidden="true">3.7.</strong> Handler</a></li><li class="chapter-item expanded "><a href="feature/init.html"><strong aria-hidden="true">3.8.</strong> Initialization</a></li><li class="chapter-item expanded "><a href="feature/async_rust.html"><strong aria-hidden="true">3.9.</strong> Async in Rust</a></li><li class="chapter-item expanded "><a href="feature/multiple_files.html"><strong aria-hidden="true">3.10.</strong> Multiple files</a></li><li class="chapter-item expanded "><a href="feature/build_rs.html"><strong aria-hidden="true">3.11.</strong> Run in build.rs</a></li><li class="chapter-item expanded "><a href="feature/cancelable_task.html"><strong aria-hidden="true">3.12.</strong> Cancellable tasks</a></li><li class="chapter-item expanded "><a href="feature/object_pool.html"><strong aria-hidden="true">3.13.</strong> Object pools</a></li><li class="chapter-item expanded "><a href="feature/wasm.html"><strong aria-hidden="true">3.14.</strong> WASM</a></li><li class="chapter-item expanded "><a href="feature/misc.html"><strong aria-hidden="true">3.15.</strong> Miscellaneous</a></li><li class="chapter-item expanded "><a href="feature/logging.html"><strong aria-hidden="true">3.16.</strong> Logging</a></li><li class="chapter-item expanded "><a href="feature/stack_trace.html"><strong aria-hidden="true">3.17.</strong> Stack Traces</a></li><li class="chapter-item expanded "><a href="feature/worker_pool.html"><strong aria-hidden="true">3.18.</strong> Worker pool</a></li><li class="chapter-item expanded "><a href="feature/expanding_macros.html"><strong aria-hidden="true">3.19.</strong> Expanding macros</a></li></ol></li><li class="chapter-item expanded "><li class="part-title">Part II: User Guide</li><li class="chapter-item expanded "><a href="template.html"><strong aria-hidden="true">4.</strong> Create new projects from a template</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="template/setup.html"><strong aria-hidden="true">4.1.</strong> Creating a new project</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="template/setup_android.html"><strong aria-hidden="true">4.1.1.</strong> Android setup</a></li><li class="chapter-item expanded "><a href="template/setup_ios.html"><strong aria-hidden="true">4.1.2.</strong> iOS setup</a></li><li class="chapter-item expanded "><a href="template/setup_web.html"><strong aria-hidden="true">4.1.3.</strong> Web setup</a></li><li class="chapter-item expanded "><a href="template/setup_desktop.html"><strong aria-hidden="true">4.1.4.</strong> Windows and Linux</a></li><li class="chapter-item expanded "><a href="template/setup_others.html"><strong aria-hidden="true">4.1.5.</strong> Other platforms</a></li></ol></li><li class="chapter-item expanded "><a href="template/tour.html"><strong aria-hidden="true">4.2.</strong> Template tour</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="template/tour_api.html"><strong aria-hidden="true">4.2.1.</strong> native/src/api.rs</a></li><li class="chapter-item expanded "><a href="template/tour_gradle.html"><strong aria-hidden="true">4.2.2.</strong> android/app/build.gradle</a></li><li class="chapter-item expanded "><a href="template/tour_native_proj.html"><strong aria-hidden="true">4.2.3.</strong> native/native.xcodeproj</a></li><li class="chapter-item expanded "><a href="template/tour_justfile.html"><strong aria-hidden="true">4.2.4.</strong> justfile</a></li><li class="chapter-item expanded "><a href="template/tour_cmake.html"><strong aria-hidden="true">4.2.5.</strong> rust.cmake</a></li></ol></li><li class="chapter-item expanded "><a href="template/generate.html"><strong aria-hidden="true">4.3.</strong> Generating code</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="template/generate_install.html"><strong aria-hidden="true">4.3.1.</strong> Installing codegen</a></li><li class="chapter-item expanded "><a href="template/generate_adding_code.html"><strong aria-hidden="true">4.3.2.</strong> Adding new code</a></li><li class="chapter-item expanded "><a href="template/generate_build_runner.html"><strong aria-hidden="true">4.3.3.</strong> Using build_runner</a></li><li class="chapter-item expanded "><a href="template/generate_finish.html"><strong aria-hidden="true">4.3.4.</strong> Wrapping up</a></li></ol></li></ol></li><li class="chapter-item expanded "><a href="integrate.html"><strong aria-hidden="true">5.</strong> Integrating with existing projects</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="integrate/new_crate.html"><strong aria-hidden="true">5.1.</strong> Creating a new crate</a></li><li class="chapter-item expanded "><a href="integrate/deps.html"><strong aria-hidden="true">5.2.</strong> Installing dependencies</a></li><li class="chapter-item expanded "><a href="integrate/android.html"><strong aria-hidden="true">5.3.</strong> Integrating with Android</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="integrate/android_tasks.html"><strong aria-hidden="true">5.3.1.</strong> Hooking onto tasks</a></li><li class="chapter-item expanded "><a href="integrate/android_cmake.html"><strong aria-hidden="true">5.3.2.</strong> CMake with Gradle</a></li></ol></li><li class="chapter-item expanded "><a href="integrate/ios.html"><strong aria-hidden="true">5.4.</strong> Integrating with iOS/MacOS</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="integrate/ios_proj.html"><strong aria-hidden="true">5.4.1.</strong> Creating the Rust project</a></li><li class="chapter-item expanded "><a href="integrate/ios_linking.html"><strong aria-hidden="true">5.4.2.</strong> Linking the project</a></li><li class="chapter-item expanded "><a href="integrate/ios_gen.html"><strong aria-hidden="true">5.4.3.</strong> Generating bindings</a></li><li class="chapter-item expanded "><a href="integrate/ios_headers.html"><strong aria-hidden="true">5.4.4.</strong> Using dummy headers</a></li></ol></li><li class="chapter-item expanded "><a href="integrate/desktop.html"><strong aria-hidden="true">5.5.</strong> Integrating with Windows and Linux</a></li><li class="chapter-item expanded "><a href="integrate/web.html"><strong aria-hidden="true">5.6.</strong> Integrating with Web</a></li><li class="chapter-item expanded "><a href="integrate/usage.html"><strong aria-hidden="true">5.7.</strong> Using the dynamic library</a></li><li class="chapter-item expanded "><a href="integrate/finish.html"><strong aria-hidden="true">5.8.</strong> Wrapping up</a></li></ol></li><li class="chapter-item expanded "><a href="library.html"><strong aria-hidden="true">6.</strong> Creating a Dart/Flutter library</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="library/overview.html"><strong aria-hidden="true">6.1.</strong> Overview</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="library/setup.html"><strong aria-hidden="true">6.1.1.</strong> Setup</a></li><li class="chapter-item expanded "><a href="library/melos.html"><strong aria-hidden="true">6.1.2.</strong> Monorepo with Melos</a></li></ol></li><li class="chapter-item expanded "><a href="library/creating_libraries.html"><strong aria-hidden="true">6.2.</strong> Creating the libraries</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="library/dart_only.html"><strong aria-hidden="true">6.2.1.</strong> Dart-only base</a></li><li class="chapter-item expanded "><a href="library/flutter_wrapper.html"><strong aria-hidden="true">6.2.2.</strong> Flutter wrapper</a></li></ol></li><li class="chapter-item expanded "><a href="library/platform_setup.html"><strong aria-hidden="true">6.3.</strong> Platform specific setup</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="library/platform_setup/windows_and_linux.html"><strong aria-hidden="true">6.3.1.</strong> Windows &amp; Linux</a></li><li class="chapter-item expanded "><a href="library/platform_setup/ios_and_macos.html"><strong aria-hidden="true">6.3.2.</strong> iOS &amp; macOS</a></li><li class="chapter-item expanded "><a href="library/platform_setup/android.html"><strong aria-hidden="true">6.3.3.</strong> Android</a></li></ol></li><li class="chapter-item expanded "><a href="library/ci.html"><strong aria-hidden="true">6.4.</strong> Continuous Integration &amp; Deployment (CI/CD)</a></li></ol></li><li class="chapter-item expanded "><li class="part-title">Part III: Contributor Guide</li><li class="chapter-item expanded "><a href="contributing/overview.html"><strong aria-hidden="true">7.</strong> Overview</a></li><li class="chapter-item expanded "><a href="contributing/design.html"><strong aria-hidden="true">8.</strong> Overall design</a></li><li class="chapter-item expanded "><a href="contributing/submodule.html"><strong aria-hidden="true">9.</strong> Submodule implementations</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="contributing/rust_opaque_type_safety.html"><strong aria-hidden="true">9.1.</strong> Rust opaque type safety</a></li><li class="chapter-item expanded "><a href="contributing/dart_opaque_type_safety.html"><strong aria-hidden="true">9.2.</strong> Dart opaque type safety</a></li></ol></li><li class="chapter-item expanded "><a href="contributing/appendix.html"><strong aria-hidden="true">10.</strong> Appendix</a></li><li class="chapter-item expanded affix "><li class="part-title">Part IV: More Doc</li><li class="chapter-item expanded "><a href="unit_tests_dart.html"><strong aria-hidden="true">11.</strong> Unit testing in Flutter</a></li><li class="chapter-item expanded "><a href="tutorial_pure_dart.html"><strong aria-hidden="true">12.</strong> Tutorial: Pure Dart</a></li><li class="chapter-item expanded "><a href="safety.html"><strong aria-hidden="true">13.</strong> Safety concerns</a></li><li class="chapter-item expanded "><a href="troubleshooting.html"><strong aria-hidden="true">14.</strong> Troubleshooting</a></li><li class="chapter-item expanded "><a href="command_line.html"><strong aria-hidden="true">15.</strong> Command line arguments</a></li><li class="chapter-item expanded "><a href="set_up_from_scratch.html"><strong aria-hidden="true">16.</strong> Set up Flutter/Dart+Rust support from scratch</a></li><li class="chapter-item expanded "><a href="build_wasm.html"><strong aria-hidden="true">17.</strong> Building a WASM binary manually</a></li><li class="chapter-item expanded "><a href="wasm_limitations.html"><strong aria-hidden="true">18.</strong> Limitations of WASM</a></li><li class="chapter-item expanded "><a href="article.html"><strong aria-hidden="true">19.</strong> Articles</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="article/async_in_rust.html"><strong aria-hidden="true">19.1.</strong> Async in Rust</a></li><li class="chapter-item expanded "><a href="article/generate_multiple_files.html"><strong aria-hidden="true">19.2.</strong> Generate multiple files</a></li></ol></li></ol>';
        // Set the current, active page, and reveal it if it's hidden
        let current_page = document.location.href.toString().split("#")[0].split("?")[0];
        if (current_page.endsWith("/")) {
            current_page += "index.html";
        }
        var links = Array.prototype.slice.call(this.querySelectorAll("a"));
        var l = links.length;
        for (var i = 0; i < l; ++i) {
            var link = links[i];
            var href = link.getAttribute("href");
            if (href && !href.startsWith("#") && !/^(?:[a-z+]+:)?\/\//.test(href)) {
                link.href = path_to_root + href;
            }
            // The "index" page is supposed to alias the first chapter in the book.
            if (link.href === current_page || (i === 0 && path_to_root === "" && current_page.endsWith("/index.html"))) {
                link.classList.add("active");
                var parent = link.parentElement;
                if (parent && parent.classList.contains("chapter-item")) {
                    parent.classList.add("expanded");
                }
                while (parent) {
                    if (parent.tagName === "LI" && parent.previousElementSibling) {
                        if (parent.previousElementSibling.classList.contains("chapter-item")) {
                            parent.previousElementSibling.classList.add("expanded");
                        }
                    }
                    parent = parent.parentElement;
                }
            }
        }
        // Track and set sidebar scroll position
        this.addEventListener('click', function(e) {
            if (e.target.tagName === 'A') {
                sessionStorage.setItem('sidebar-scroll', this.scrollTop);
            }
        }, { passive: true });
        var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');
        sessionStorage.removeItem('sidebar-scroll');
        if (sidebarScrollTop) {
            // preserve sidebar scroll position when navigating via links within sidebar
            this.scrollTop = sidebarScrollTop;
        } else {
            // scroll sidebar to current active section when navigating via "next/previous chapter" buttons
            var activeSection = document.querySelector('#sidebar .active');
            if (activeSection) {
                activeSection.scrollIntoView({ block: 'center' });
            }
        }
        // Toggle buttons
        var sidebarAnchorToggles = document.querySelectorAll('#sidebar a.toggle');
        function toggleSection(ev) {
            ev.currentTarget.parentElement.classList.toggle('expanded');
        }
        Array.from(sidebarAnchorToggles).forEach(function (el) {
            el.addEventListener('click', toggleSection);
        });
    }
}
window.customElements.define("mdbook-sidebar-scrollbox", MDBookSidebarScrollbox);
