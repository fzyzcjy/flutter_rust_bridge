"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[3179],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>d});var n=r(96540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),g=l(r),d=i,f=g["".concat(u,".").concat(d)]||g[d]||p[d]||a;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=g;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},95134:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(58168),i=(r(96540),r(15680));const a={},o="Use BrickHub to add to existing projects",s={unversionedId:"manual/integrate/existing/index",id:"manual/integrate/existing/index",title:"Use BrickHub to add to existing projects",description:"This guide was written for flutterrustbridge v1, thus some content may be outdated.",source:"@site/docs/manual/integrate/06-existing/index.md",sourceDirName:"manual/integrate/06-existing",slug:"/manual/integrate/existing/",permalink:"/flutter_rust_bridge/manual/integrate/existing/",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/manual/integrate/06-existing/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Wrapping up",permalink:"/flutter_rust_bridge/manual/integrate/template/generate/finish"},next:{title:"Creating a new crate",permalink:"/flutter_rust_bridge/manual/integrate/existing/new-crate"}},u={},l=[{value:"Using the <code>flutter_rust_bridge</code> brick",id:"using-the-flutter_rust_bridge-brick",level:2}],c={toc:l};function p(e){let{components:t,...r}=e;return(0,i.yg)("wrapper",(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"use-brickhub-to-add-to-existing-projects"},"Use BrickHub to add to existing projects"),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"This guide was written for flutter_rust_bridge v1, thus some content may be outdated.\nThe quickest approach to integrate is to follow the one-click approach in flutter_rust_bridge's quickstart page.")),(0,i.yg)("p",null,"This guide is an intermediate-level introduction to integrating Rust with\nan existing Flutter project. If you are new to Rust or configuring\nbuild processes in general, we suggest looking at ",(0,i.yg)("a",{parentName:"p",href:"template/tour"},"the template tour"),"\nto learn about the moving parts behind a ",(0,i.yg)("inlineCode",{parentName:"p"},"flutter run"),"."),(0,i.yg)("p",null,"Before following this guide, upgrade your Flutter SDK, and if possible\nrefresh your native build folders (",(0,i.yg)("inlineCode",{parentName:"p"},"android"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"ios"),", etc.) to make the process\nas straightforward as possible."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Remark:")," Most complexity does ",(0,i.yg)("em",{parentName:"p"},"not")," come from this library, ",(0,i.yg)("inlineCode",{parentName:"p"},"flutter_rust_bridge")," - it is as same complex as using raw Dart/Flutter FFI with Rust. In other words, it is the Dart/Flutter + Rust toolchain that takes time to set up."),(0,i.yg)("h2",{id:"using-the-flutter_rust_bridge-brick"},"Using the ",(0,i.yg)("inlineCode",{parentName:"h2"},"flutter_rust_bridge")," brick"),(0,i.yg)("p",null,"The following sections cover how to set up Rust support from scratch for completeness' sake,\nhowever for your convenience you can also use the ",(0,i.yg)("a",{parentName:"p",href:"https://brickhub.dev/bricks/flutter_rust_bridge/"},(0,i.yg)("inlineCode",{parentName:"a"},"fluttter_rust_bridge")," brick"),"\nto scaffold most of",(0,i.yg)("sup",{parentName:"p",id:"fnref-1"},(0,i.yg)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))," the code written here."),(0,i.yg)("div",{className:"footnotes"},(0,i.yg)("hr",{parentName:"div"}),(0,i.yg)("ol",{parentName:"div"},(0,i.yg)("li",{parentName:"ol",id:"fn-1"},"Some setup steps are still required even with the brick, which we will go into more detail in the later sections.\nThe brick is a work-in-progress.",(0,i.yg)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}p.isMDXComponent=!0}}]);